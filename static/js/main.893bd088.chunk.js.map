{"version":3,"sources":["context/auth-context.js","utils/constants.js","pages/Auth.js","components/Spinner/Spinner.js","components/Bookings/BookingList/BookingList.js","components/Bookings/BookingsChart/BookingsChart.js","components/Bookings/BookingsControls/BookingsControls.js","pages/Bookings.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Events/EventList/EventItem/EventItem.js","components/Events/EventList/EventList.js","pages/Events.js","components/Navigation/MainNavigation.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","token","userId","login","tokenExpiration","logout","BASE_URL","process","REACT_APP_API_URI","AuthPage","props","state","isLogin","switchModeHandler","setState","prevState","submitHandler","event","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","variables","pwd","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","context","toast","success","catch","err","console","log","error","message","createRef","className","onSubmit","this","htmlFor","type","id","ref","onClick","Component","contextType","AuthContext","spinner","bookingList","bookings","map","booking","key","_id","title","Date","createdAt","toLocaleDateString","onDelete","bind","BOOKINGS_BUCKETS","Cheap","min","max","Normal","Expensive","bookingsChart","chartData","labels","datasets","values","bucket","filteredBookingsCount","reduce","prev","price","push","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","bookingsControl","activeOutputType","onChange","BookingsPage","isLoading","outputType","fetchBookings","Authorization","deleteBookingHandler","bookingId","filter","warn","cancelBooking","changeOutputTypeHandler","content","Fragment","modal","children","canConfirm","onConfirm","confirmText","canCancel","onCancel","backdrop","eventItem","eventId","date","creatorId","onDetail","eventList","events","authUserId","creator","onViewDetail","EventsPage","creating","selectedEvent","isActive","startCreateEventHandler","modalConfirmHandler","titleElRef","priceElRef","dateElRef","description","descriptionElRef","updatedEvents","createEvent","modalCancelHandler","showDetailHandler","find","e","bookEventHandler","bookEvent","fetchEvents","rows","mainNavigation","Consumer","to","configure","App","initApp","a","localStorage","getItem","setItem","removeItem","Provider","path","component","from","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.893bd088.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default React.createContext({\r\n  token: null,\r\n  userId: null,\r\n  login: (token, userId, tokenExpiration) => {},\r\n  logout: () => {},\r\n});\r\n","export const BASE_URL = process.env.REACT_APP_API_URI;\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport \"./Auth.css\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport { BASE_URL } from \"../utils/constants\";\r\n\r\nclass AuthPage extends Component {\r\n  state = {\r\n    isLogin: true,\r\n  };\r\n\r\n  static contextType = AuthContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.emailEl = React.createRef();\r\n    this.passwordEl = React.createRef();\r\n  }\r\n\r\n  switchModeHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { isLogin: !prevState.isLogin };\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const email = this.emailEl.current.value;\r\n    const password = this.passwordEl.current.value;\r\n\r\n    if (email.trim().length === 0 || password.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    let requestBody = {\r\n      query: `\r\n        query Login($email: String!, $pwd: String!) {\r\n          login(email: $email, password: $pwd) {\r\n            userId\r\n            token\r\n            tokenExpiration\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        email,\r\n        pwd: password,\r\n      },\r\n    };\r\n\r\n    if (!this.state.isLogin) {\r\n      requestBody = {\r\n        query: `\r\n          mutation CreateUser($email: String!, $pwd: String!) {\r\n            createUser(userInput: {email: $email, password: $pwd}) {\r\n              _id\r\n              email\r\n            }\r\n          }\r\n        `,\r\n        variables: {\r\n          email,\r\n          pwd: password,\r\n        },\r\n      };\r\n    }\r\n\r\n    fetch(BASE_URL, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Authentication Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        if (\r\n          resData.data.login &&\r\n          resData.data.login.token &&\r\n          this.state.isLogin\r\n        ) {\r\n          this.context.login(\r\n            resData.data.login.token,\r\n            resData.data.login.userId,\r\n            resData.data.login.tokenExpiration\r\n          );\r\n          return;\r\n        }\r\n        toast.success(\"Signed up successfully!\");\r\n        this.switchModeHandler();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.error(err.message);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"email\">E-Mail</label>\r\n          <input type=\"email\" id=\"email\" ref={this.emailEl} />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" ref={this.passwordEl} />\r\n        </div>\r\n        <div className=\"form-actions\">\r\n          <button type=\"submit\">\r\n            {this.state.isLogin ? \"Login\" : \"Signup\"}\r\n          </button>\r\n          <button type=\"button\" onClick={this.switchModeHandler}>\r\n            Switch to {this.state.isLogin ? \"Signup\" : \"Login\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthPage;\r\n","import React from \"react\";\r\n\r\nimport \"./Spinner.css\";\r\n\r\nconst spinner = () => (\r\n  <div className=\"spinner\">\r\n    <div className=\"lds-dual-ring\" />\r\n  </div>\r\n);\r\n\r\nexport default spinner;\r\n","import React from \"react\";\r\n\r\nimport \"./BookingList.css\";\r\n\r\nconst bookingList = (props) => (\r\n  <ul className=\"bookings__list\">\r\n    {props.bookings.map((booking) => {\r\n      return (\r\n        <li key={booking._id} className=\"bookings__item\">\r\n          <div className=\"bookings__item-data\">\r\n            <span>{booking.event.title}</span> -\r\n            {new Date(booking.createdAt).toLocaleDateString()}\r\n          </div>\r\n          <div className=\"bookings__item-actions\">\r\n            <button\r\n              className=\"btn\"\r\n              onClick={props.onDelete.bind(this, booking._id)}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </li>\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nexport default bookingList;\r\n","import React from \"react\";\r\nimport { Bar as BarChart } from \"react-chartjs-2\";\r\n\r\nimport \"./BookingsChart.css\";\r\n\r\nconst BOOKINGS_BUCKETS = {\r\n  Cheap: {\r\n    min: 0,\r\n    max: 100,\r\n  },\r\n  Normal: {\r\n    min: 100,\r\n    max: 200,\r\n  },\r\n  Expensive: {\r\n    min: 200,\r\n    max: 10000000,\r\n  },\r\n};\r\n\r\nconst bookingsChart = (props) => {\r\n  const chartData = { labels: [], datasets: [] };\r\n  let values = [];\r\n  for (const bucket in BOOKINGS_BUCKETS) {\r\n    const filteredBookingsCount = props.bookings.reduce((prev, current) => {\r\n      if (\r\n        current.event.price > BOOKINGS_BUCKETS[bucket].min &&\r\n        current.event.price <= BOOKINGS_BUCKETS[bucket].max\r\n      ) {\r\n        return prev + 1;\r\n      } else {\r\n        return prev;\r\n      }\r\n    }, 0);\r\n    values.push(filteredBookingsCount);\r\n    chartData.labels.push(bucket);\r\n    chartData.datasets.push({\r\n      label: bucket,\r\n      backgroundColor: \"rgba(255, 247, 15, 0.5)\",\r\n      borderColor: \"rgba(252, 227, 83, 1)\",\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: \"rgba(255, 239, 15, 0.6)\",\r\n      hoverBorderColor: \"rgba(248, 226, 100, 1)\",\r\n      data: values,\r\n    });\r\n    values = [...values];\r\n    values[values.length - 1] = 0;\r\n  }\r\n\r\n  return (\r\n    <div className=\"bookings-chart\">\r\n      <BarChart data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default bookingsChart;\r\n","import React from \"react\";\r\n\r\nimport \"./BookingsControls.css\";\r\n\r\nconst bookingsControl = (props) => {\r\n  return (\r\n    <div className=\"bookings-control\">\r\n      <button\r\n        className={props.activeOutputType === \"list\" ? \"active\" : \"\"}\r\n        onClick={props.onChange.bind(this, \"list\")}\r\n      >\r\n        List\r\n      </button>\r\n      <button\r\n        className={props.activeOutputType === \"chart\" ? \"active\" : \"\"}\r\n        onClick={props.onChange.bind(this, \"chart\")}\r\n      >\r\n        Chart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default bookingsControl;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Spinner from \"../components/Spinner/Spinner\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport BookingList from \"../components/Bookings/BookingList/BookingList\";\r\nimport BookingsChart from \"../components/Bookings/BookingsChart/BookingsChart\";\r\nimport BookingsControls from \"../components/Bookings/BookingsControls/BookingsControls\";\r\nimport { toast } from \"react-toastify\";\r\nimport { BASE_URL } from \"../utils/constants\";\r\n\r\nclass BookingsPage extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    bookings: [],\r\n    outputType: \"list\",\r\n  };\r\n\r\n  static contextType = AuthContext;\r\n\r\n  componentDidMount() {\r\n    this.fetchBookings();\r\n  }\r\n\r\n  fetchBookings = () => {\r\n    this.setState({ isLoading: true });\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            bookings {\r\n              _id\r\n             createdAt\r\n             event {\r\n               _id\r\n               title\r\n               date\r\n               price\r\n             }\r\n            }\r\n          }\r\n        `,\r\n    };\r\n\r\n    fetch(BASE_URL, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        const bookings = resData.data.bookings;\r\n        this.setState({ bookings: bookings, isLoading: false });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({ isLoading: false });\r\n      });\r\n  };\r\n\r\n  deleteBookingHandler = (bookingId) => {\r\n    this.setState({ isLoading: true });\r\n    const requestBody = {\r\n      query: `\r\n          mutation CancelBooking($id: ID!) {\r\n            cancelBooking(bookingId: $id) {\r\n            _id\r\n             title\r\n            }\r\n          }\r\n        `,\r\n      variables: {\r\n        id: bookingId,\r\n      },\r\n    };\r\n\r\n    fetch(BASE_URL, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        this.setState((prevState) => {\r\n          const updatedBookings = prevState.bookings.filter((booking) => {\r\n            return booking._id !== bookingId;\r\n          });\r\n          return { bookings: updatedBookings, isLoading: false };\r\n        });\r\n        toast.warn(\r\n          `Event: \"${resData.data.cancelBooking.title}\" booking cancelled successfully.`\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({ isLoading: false });\r\n        toast.error(err.message);\r\n      });\r\n  };\r\n\r\n  changeOutputTypeHandler = (outputType) => {\r\n    if (outputType === \"list\") {\r\n      this.setState({ outputType: \"list\" });\r\n    } else {\r\n      this.setState({ outputType: \"chart\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let content = <Spinner />;\r\n    if (!this.state.isLoading) {\r\n      content = (\r\n        <React.Fragment>\r\n          <BookingsControls\r\n            activeOutputType={this.state.outputType}\r\n            onChange={this.changeOutputTypeHandler}\r\n          />\r\n          <div>\r\n            {this.state.outputType === \"list\" ? (\r\n              <BookingList\r\n                bookings={this.state.bookings}\r\n                onDelete={this.deleteBookingHandler}\r\n              />\r\n            ) : (\r\n              <BookingsChart bookings={this.state.bookings} />\r\n            )}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return <React.Fragment>{content}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default BookingsPage;\r\n","import React from \"react\";\r\n\r\nimport \"./Modal.css\";\r\n\r\nconst modal = (props) => (\r\n  <div className=\"modal\">\r\n    <header className=\"modal__header\">\r\n      <h1>{props.title}</h1>\r\n    </header>\r\n    <section className=\"modal__content\">{props.children}</section>\r\n    <section className=\"modal__actions\">\r\n      {props.canConfirm && (\r\n        <button className=\"btn btn-primary\" onClick={props.onConfirm}>\r\n          {props.confirmText}\r\n        </button>\r\n      )}\r\n      {props.canCancel && (\r\n        <button className=\"btn\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n      )}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nexport default modal;\r\n","import React from \"react\";\r\n\r\nimport \"./Backdrop.css\";\r\n\r\nconst backdrop = (props) => <div className=\"backdrop\"></div>;\r\n\r\nexport default backdrop;\r\n","import React from \"react\";\r\n\r\nimport \"./EventItem.css\";\r\n\r\nconst eventItem = (props) => (\r\n  <li key={props.eventId} className=\"events__list-item\">\r\n    <div>\r\n      <h1>{props.title}</h1>\r\n      <h2>\r\n        <span>${props.price}</span> -{\" \"}\r\n        {new Date(props.date).toLocaleDateString()}\r\n      </h2>\r\n    </div>\r\n    <div>\r\n      {props.userId === props.creatorId ? (\r\n        <p>You're the owner of this event.</p>\r\n      ) : (\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={props.onDetail.bind(this, props.eventId)}\r\n        >\r\n          View Details\r\n        </button>\r\n      )}\r\n    </div>\r\n  </li>\r\n);\r\n\r\nexport default eventItem;\r\n","import React from \"react\";\r\n\r\nimport EventItem from \"./EventItem/EventItem\";\r\nimport \"./EventList.css\";\r\n\r\nconst eventList = (props) => {\r\n  const events = props.events.map((event) => {\r\n    return (\r\n      <EventItem\r\n        key={event._id}\r\n        eventId={event._id}\r\n        title={event.title}\r\n        price={event.price}\r\n        date={event.date}\r\n        userId={props.authUserId}\r\n        creatorId={event.creator._id}\r\n        onDetail={props.onViewDetail}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <ul className=\"event__list\">{events}</ul>;\r\n};\r\n\r\nexport default eventList;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Modal from \"../components/Modal/Modal\";\r\nimport Backdrop from \"../components/Backdrop/Backdrop\";\r\nimport EventList from \"../components/Events/EventList/EventList\";\r\nimport Spinner from \"../components/Spinner/Spinner\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport \"./Events.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { BASE_URL } from \"../utils/constants\";\r\n\r\nclass EventsPage extends Component {\r\n  state = {\r\n    creating: false,\r\n    events: [],\r\n    isLoading: false,\r\n    selectedEvent: null,\r\n  };\r\n  isActive = true;\r\n\r\n  static contextType = AuthContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.titleElRef = React.createRef();\r\n    this.priceElRef = React.createRef();\r\n    this.dateElRef = React.createRef();\r\n    this.descriptionElRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchEvents();\r\n  }\r\n\r\n  startCreateEventHandler = () => {\r\n    this.setState({ creating: true });\r\n  };\r\n\r\n  modalConfirmHandler = () => {\r\n    this.setState({ creating: false });\r\n    const title = this.titleElRef.current.value;\r\n    const price = +this.priceElRef.current.value;\r\n    const date = this.dateElRef.current.value;\r\n    const description = this.descriptionElRef.current.value;\r\n\r\n    if (\r\n      title.trim().length === 0 ||\r\n      price <= 0 ||\r\n      date.trim().length === 0 ||\r\n      description.trim().length === 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const event = { title, price, date, description };\r\n    console.log(event);\r\n\r\n    const requestBody = {\r\n      query: `\r\n          mutation CreateEvent($title: String!, $description: String!, $price: Float!, $date: String!) {\r\n            createEvent(eventInput: {title: $title, description: $description, price: $price, date: $date}) {\r\n              _id\r\n              title\r\n              description\r\n              date\r\n              price\r\n            }\r\n          }\r\n        `,\r\n      variables: {\r\n        title,\r\n        description,\r\n        price,\r\n        date,\r\n      },\r\n    };\r\n\r\n    const token = this.context.token;\r\n\r\n    fetch(BASE_URL, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        this.setState((prevState) => {\r\n          const updatedEvents = [...prevState.events];\r\n          updatedEvents.push({\r\n            _id: resData.data.createEvent._id,\r\n            title: resData.data.createEvent.title,\r\n            description: resData.data.createEvent.description,\r\n            date: resData.data.createEvent.date,\r\n            price: resData.data.createEvent.price,\r\n            creator: {\r\n              _id: this.context.userId,\r\n            },\r\n          });\r\n          return { events: updatedEvents };\r\n        });\r\n        toast.success(\r\n          `Event: \"${resData.data.createEvent.title}\" created successfully.`\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.error(err.message);\r\n      });\r\n  };\r\n\r\n  modalCancelHandler = () => {\r\n    this.setState({ creating: false, selectedEvent: null });\r\n  };\r\n\r\n  fetchEvents() {\r\n    this.setState({ isLoading: true });\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            events {\r\n              _id\r\n              title\r\n              description\r\n              date\r\n              price\r\n              creator {\r\n                _id\r\n                email\r\n              }\r\n            }\r\n          }\r\n        `,\r\n    };\r\n\r\n    fetch(BASE_URL, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        const events = resData.data.events;\r\n        if (this.isActive) {\r\n          this.setState({ events: events, isLoading: false });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        if (this.isActive) {\r\n          this.setState({ isLoading: false });\r\n        }\r\n      });\r\n  }\r\n\r\n  showDetailHandler = (eventId) => {\r\n    this.setState((prevState) => {\r\n      const selectedEvent = prevState.events.find((e) => e._id === eventId);\r\n      console.log(\"this.state.selectedEvent\", selectedEvent);\r\n      return { selectedEvent: selectedEvent };\r\n    });\r\n  };\r\n\r\n  bookEventHandler = () => {\r\n    if (!this.context.token) {\r\n      this.setState({ selectedEvent: null });\r\n      return;\r\n    }\r\n    console.log(this.state.selectedEvent);\r\n    const requestBody = {\r\n      query: `\r\n          mutation BookEvent($id: ID!) {\r\n            bookEvent(eventId: $id) {\r\n              _id\r\n             createdAt\r\n             updatedAt\r\n             event {\r\n               title\r\n             }\r\n            }\r\n          }\r\n        `,\r\n      variables: {\r\n        id: this.state.selectedEvent._id,\r\n      },\r\n    };\r\n\r\n    fetch(BASE_URL, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        this.setState({ selectedEvent: null });\r\n        toast.success(\r\n          `Event: \"${resData.data.bookEvent.event.title}\" booked successfully.`\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.error(err.message);\r\n      });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.isActive = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {(this.state.creating || this.state.selectedEvent) && <Backdrop />}\r\n        {this.state.creating && (\r\n          <Modal\r\n            title=\"Add Event\"\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.modalConfirmHandler}\r\n            confirmText=\"Confirm\"\r\n          >\r\n            <form>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"text\" id=\"title\" ref={this.titleElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input type=\"number\" id=\"price\" ref={this.priceElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  rows=\"4\"\r\n                  ref={this.descriptionElRef}\r\n                />\r\n              </div>\r\n            </form>\r\n          </Modal>\r\n        )}\r\n        {this.state.selectedEvent && (\r\n          <Modal\r\n            title={this.state.selectedEvent.title}\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.bookEventHandler}\r\n            confirmText={this.context.token ? \"Book\" : \"Confirm\"}\r\n          >\r\n            <h2 className=\"events-modal-date\">\r\n              {new Date(this.state.selectedEvent.date).toLocaleDateString()}\r\n            </h2>\r\n            <h2>${this.state.selectedEvent.price}</h2>\r\n            <p>{this.state.selectedEvent.description}</p>\r\n            <p>\r\n              For queries, contact at: {this.state.selectedEvent.creator.email}\r\n            </p>\r\n          </Modal>\r\n        )}\r\n        {this.context.token && (\r\n          <div className=\"events-control\">\r\n            <p>Share your own Events!</p>\r\n            <button className=\"btn\" onClick={this.startCreateEventHandler}>\r\n              Create Event\r\n            </button>\r\n          </div>\r\n        )}\r\n        {this.state.isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <EventList\r\n            events={this.state.events}\r\n            authUserId={this.context.userId}\r\n            onViewDetail={this.showDetailHandler}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventsPage;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport AuthContext from \"../../context/auth-context\";\r\nimport \"./MainNavigation.css\";\r\n\r\nconst mainNavigation = (props) => (\r\n  <AuthContext.Consumer>\r\n    {(context) => {\r\n      return (\r\n        <header className=\"main-navigation\">\r\n          <div className=\"main-navigation__logo\">\r\n            <h1>GQLMERN</h1>\r\n          </div>\r\n          <nav className=\"main-navigation__items\">\r\n            <ul>\r\n              <li>\r\n                <NavLink to=\"/events\">Events</NavLink>\r\n              </li>\r\n              {!context.token ? (\r\n                <li className=\"main-navigation__items__login-link\">\r\n                  <NavLink to=\"/auth\">Login / Signup</NavLink>\r\n                </li>\r\n              ) : (\r\n                <React.Fragment>\r\n                  <li>\r\n                    <NavLink to=\"/bookings\">Bookings</NavLink>\r\n                  </li>\r\n                  <li>\r\n                    <button onClick={context.logout}>Logout</button>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n      );\r\n    }}\r\n  </AuthContext.Consumer>\r\n);\r\n\r\nexport default mainNavigation;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nimport AuthPage from \"./pages/Auth\";\nimport BookingsPage from \"./pages/Bookings\";\nimport EventsPage from \"./pages/Events\";\nimport MainNavigation from \"./components/Navigation/MainNavigation\";\nimport AuthContext from \"./context/auth-context\";\n\nimport \"./App.css\";\n\ntoast.configure();\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null,\n  };\n\n  componentDidMount() {\n    this.initApp();\n  }\n\n  initApp = async () => {\n    const token = (await localStorage.getItem(\"TOKEN\")) || null;\n    const userId = (await localStorage.getItem(\"USERID\")) || null;\n    this.setState({ token, userId });\n  };\n\n  login = (token, userId, tokenExpiration) => {\n    this.setState({ token: token, userId: userId });\n    localStorage.setItem(\"TOKEN\", token);\n    localStorage.setItem(\"USERID\", userId);\n  };\n\n  logout = () => {\n    this.setState({ token: null, userId: null });\n    localStorage.removeItem(\"TOKEN\");\n    localStorage.removeItem(\"USERID\");\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              login: this.login,\n              logout: this.logout,\n            }}\n          >\n            <ToastContainer />\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n                <Route path=\"/events\" component={EventsPage} />\n                {this.state.token && <Redirect from=\"/\" to=\"/events\" exact />}\n                {this.state.token && (\n                  <Redirect from=\"/auth\" to=\"/events\" exact />\n                )}\n                {this.state.token && (\n                  <Route path=\"/bookings\" component={BookingsPage} />\n                )}\n                {!this.state.token && (\n                  <Route path=\"/auth\" component={AuthPage} />\n                )}\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\n              </Switch>\n            </main>\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}